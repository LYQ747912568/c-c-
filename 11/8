#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include <string.h>

//int main()
//{
//	//0-假
//	//非0-真 
//	//int a = 3 && 5;
//	//printf("%d\n", a);
//	//int a = 10;
//	//int b = 0;
//	//if (a > 10)
//	//	b = 3;
//	//else
//	//	b = -3;
//
//	//a > 10 ? b = 3 : b = -3;
//
//	//b = (a > 10 ? 3 : -3);
//	return 0;
//}

//逗号表达式的结果为最后一位
//int main()
//{
//	//int a = (2, 3, 4, 5, 8 - 2);//6
//	int a = 2;
//	int b = 3;
//	int c = 6;
//	int d = (c = b + 2, b = c - a, c = c - b);//2
//
//	printf("%d\n", d);
//	return 0;
//}

//int main()
//{
//	int a[10] = { 0 };
//	//0-9
//	//a+b
//	a[5] = 30;//下标引用操作符
//	return 0;
//}

//int Add(int x, int y)
//{
//	return x + y;
//}
//int main()
//{
//	int ret = Add(2, 3);//函数调用操作符
//	printf("%d\n", ret);
//	return 0;
//}

//常见关键字

//int main()
//{
//	//char int;
//	//int a = 10;
//	//register 寄存器 建议的作用
//	//register int a = 10;
//
//	unsigned int a = 10;
//	typedef unsigned int u_int;
//
//	u_int b = 20;
//	return 0;
//}

//void test(void)
//{
//	printf("hehe\n");
//}
//
//int main()
//{
//	test();
//	return;
//}

//关键字static-静态
//1，修饰局部变量
//   修改了局部变量的生命周期
//void test()
//{
//	int a = 1;
//	a++;
//	printf("%d", a);
//}
//int  main()
//{
//	int i = 0;
//	for (i = 0; i < 10; i++)
//	{
//		test();
//	}
//	return 0; //2222222222
//}
//
//void test()
//{
//	static int a = 0;
//	a++;
//	printf("%d", a);
//}
//int  main()
//{
//	int i = 0;
//	for (i = 0; i < 10; i++)
//	{
//		test();
//	}
//	return 0; //12345678910
//}

//static修饰全局变量
//使得全局变量只能在自己所在的源文件内部使用，其他源文件无法访问
//改变的是链接属性（外部->内部）-（c和指针） 
//声明外部符号
//extern int g_val;
//
//int main()
//{
//	printf("%d\n", g_val);
//
//	return 0;
//}

//static修饰函数
//改变的是函数的链接属性（外->内）

//extern int Add(int x, int y);
//
//int main()
//{
//	int a = 10;
//	int b = 20;
//	int ret = Add(a, b);
//	printf("%d\n", ret);
//	return 0;
//}

//#define 定义常量和宏

//#define MAX(X,Y) ((X)>(Y)?(X):(Y))
//
//int main()
//{
//	//int a = MAX;
//	//MAX = 20000;
//	int max = MAX(2, 5);
//	printf("%d\n", max);
//	return 0;
//}

//指针
 
//int main()
//{
//	int a = 10;//4
//	//printf("%p\n", &a);
//	int* p = &a;//指针变量
//	*p = 20;//解引用操作符
//
//	char ch = 'w';
//	char* pc = %ch;
//	*pc = 'a';
//
//	printf("%d\n", a);
//	return 0;
//}

//int main()
//{
//	printf("%d\n", sizeof(char));//1
//	printf("%d\n", sizeof(short));//2
//	printf("%d\n", sizeof(int));//4
//
//	printf("%d\n", sizeof(char*));//4
//	printf("%d\n", sizeof(char*));//4
//	printf("%d\n", sizeof(char*));//4  //32位 
//
//
//	return 0;
//}

//结构体

//描述学生
//学生类型
//struct Stu
//{
//	char name[20];
//	short age;
//	char sex[5];
//	char tele[12];
//	char addr[30];
//};
//
//int main()
//{
//	struct Stu s = {"张三", 20, "保密", "12345", "北京"};//学生对象
//	struct Stu* ps = &s;
//	printf("%s %d %s\n", (*ps).name, (*ps).age, (*ps).sex);
//	printf("%s %d %s\n", ps->name, ps->age, ps->sex);
//	//结构体成员的访问
//	printf("%s %d %s\n", s.name, s.age, s.sex);
//	return 0;
//}
