//标准输入输出头文件
//
//#include <stdio.h>
//
//main-主函数-程序的入口
//main函数有且仅有一个
//int main()
//{
//	//输出函数-库函数
//	printf("hehe\n");
//    return 0;
//}

//int main()
//{
//	printf("%d\n", 100);//100
//	printf("%c\n", 100);//d
//	return 0;
//}

//int main()
//{
//	short age = 20;
//	printf("age=%d\n", age);
//	return 0;
//}

////int global = 2019;//全局变量
////int main()
////{
////	int local = 2018;//局部变量
////	//下面定义的global会不会有问题？
////	int global = 2020;//局部变量
////	printf("global=%d\n", global);
////	return 0;
//	//global-2020
//}
//上面的局部变量global变量的定义其实没有什么问题！
//当局部变量和全局变量同名时候，局部变量优先使用。

//int main()
//{
//	int num1 = 0;
//	int num2 = 0;
//	int sum = 0;
//	printf("输入两个操作符:>");
//	scanf("%d%d", &num1, &num2);
//	sum = num1 + num2;
//	printf("sum = %d\n", sum);
//	return 0;
//}

//int main()
//{
//	//1. 字面常量
//	//double d = 3.14;
//	//'a';
//	//"abcdef";
//	//2. const修饰的常变量
//	//const int num = 10;
//	//num = 20;
//	//const int n = 10;
//	//int arr[n] = {0};
//	//3. #define 定义的标识符常量
//	/*int a = MAX;
//	MAX = 200;
//	printf("a = %d\n", a);*/
//	//4. 枚举常量
//	//enum Sex s = FEMALE;
//	printf("%d\n", MALE);
//	printf("%d\n", FEMALE);
//	printf("%d\n", SECRET);
//	//MALE = 20;
//
//	return 0;
//}
//int main()
//{
//	int a = 10;
//	{
//		int b = 20;
//		printf("b = %d\n", b);
//	}
//	printf("a = %d\n", a);
//	return 0;
}

//int a = 10;
//
//void test()
//{
//	printf("test::a = %d\n", a);
//}
//int main()
//{
//	printf("a = %d\n", a);
//	test();
//	return 0;
//}
